---
source: chainsight-cdk-macros/src/web3.rs
expression: formatted
---
use ic_web3_rs::transforms::transform::TransformProcessor;
#[ic_cdk::query]
#[candid::candid_method(query)]
fn transform(
    response: ic_cdk::api::management_canister::http_request::TransformArgs,
) -> ic_cdk::api::management_canister::http_request::HttpResponse {
    let res = response.response;
    ic_cdk::api::management_canister::http_request::HttpResponse {
        status: res.status,
        headers: Vec::default(),
        body: res.body,
    }
}
#[ic_cdk::query]
#[candid::candid_method(query)]
fn transform_send_transaction(
    response: ic_cdk::api::management_canister::http_request::TransformArgs,
) -> ic_cdk::api::management_canister::http_request::HttpResponse {
    ic_web3_rs::transforms::processors::send_transaction_processor().transform(response)
}
#[ic_cdk::query]
#[candid::candid_method(query)]
fn transform_get_filter_changes(
    response: ic_cdk::api::management_canister::http_request::TransformArgs,
) -> ic_cdk::api::management_canister::http_request::HttpResponse {
    ic_web3_rs::transforms::processors::get_filter_changes_processor().transform(response)
}
#[ic_cdk::query]
#[candid::candid_method(query)]
fn transform_eip1559_support(
    response: ic_cdk::api::management_canister::http_request::TransformArgs,
) -> ic_cdk::api::management_canister::http_request::HttpResponse {
    use chainsight_cdk::web3::TransformProcessor;
    let processor = chainsight_cdk::web3::processors::EIP1559SupportProcessor;
    processor.transform(response)
}

