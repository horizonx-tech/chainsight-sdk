name: QA
on:
  pull_request:
  push:
    branches:
      - main
env:
  RUST_VERSION: 1.79.0
jobs:
  format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the source code
        uses: actions/checkout@v3
      - name: Cache Cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-${{ env.RUST_VERSION }}
      - name: Install Rust
        run: |
          rustup update ${{ env.RUST_VERSION }} --no-self-update
          rustup default ${{ env.RUST_VERSION }}
          rustup component add rustfmt
      - name: Check format
        run: cargo fmt --all --check
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the source code
        uses: actions/checkout@v3
      - name: Cache Cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-${{ env.RUST_VERSION }}
      - name: Install Rust
        run: |
          rustup update ${{ env.RUST_VERSION }} --no-self-update
          rustup default ${{ env.RUST_VERSION }}
          rustup component add clippy
      - name: Execute lint (clippy)
        run: cargo clippy -- -D clippy::all
  unit-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the source code
        uses: actions/checkout@v3
      - name: Cache Cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-${{ env.RUST_VERSION }}
      - name: Install Rust
        run: |
          rustup update ${{ env.RUST_VERSION }} --no-self-update
          rustup default ${{ env.RUST_VERSION }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          components: rustfmt
      - uses: actions-rs/cargo@v1
        with:
          toolchain: nightly
          command: test
          args: --all-features --no-fail-fast
        env:
          CARGO_INCREMENTAL: "0"
          RUSTFLAGS: "-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Coverflow-checks=off"
          RUSTDOCFLAGS: "-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Coverflow-checks=off"
      - uses: actions-rs/grcov@v0.1
        id: coverage
      - name: Coveralls upload
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ${{ steps.coverage.outputs.report }}
